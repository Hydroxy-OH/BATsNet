---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-viewer
rules:
- apiGroups: [""]
  resources: ["pods","nodes"]
  verbs: ["get","list","update","patch"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sensor-plugin
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sensor-plugin-view-pod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pods-viewer
subjects:
- kind: ServiceAccount
  name: sensor-plugin
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cuhk-sensor-plugin-daemonset
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: cuhk-sensor-plugin-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: cuhk-sensor-plugin-ds
    spec:
      serviceAccountName: "sensor-plugin"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dedicated
                operator: NotIn
                values:
                  - "master"
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      priorityClassName: "system-node-critical"
      hostNetwork: true
      containers:
      - image: 137.189.97.26:5000/cuhk-sensor-plugin:v0.0.1
        name: cuhk-sensor-plugin-ctr
        args: ["--fail-on-init-error=false"]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
        env:
        - name: NODE_IP
          value: "127.0.0.1"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
